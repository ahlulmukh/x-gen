name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "1.24.2"

      - name: Build Linux (${{ matrix.arch }})
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o x-gen-${{ matrix.arch }} ./cmd/main.go
          sha256sum x-gen-${{ matrix.arch }} > checksum-${{ matrix.arch }}.txt

      - uses: actions/upload-artifact@v4
        with:
          name: x-gen-linux-${{ matrix.arch }}
          path: |
            x-gen-${{ matrix.arch }}
            checksum-${{ matrix.arch }}.txt

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "1.24.2"

      - name: Build Windows
        run: |
          go build -o x-gen.exe ./cmd/main.go
          CertUtil -hashfile x-gen.exe SHA256 > checksum-windows.txt
        shell: pwsh

      - uses: actions/upload-artifact@v4
        with:
          name: x-gen-windows
          path: |
            x-gen.exe
            checksum-windows.txt

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release.json
        run: |
          cd artifacts
          WIN_PATH=$(find . -name "x-gen.exe")

          LIN_PATH_AMD64=$(find . -name "x-gen-amd64")
          LIN_PATH_ARM64=$(find . -name "x-gen-arm64")

          WIN_SUM=$(sha256sum "$WIN_PATH" | awk '{print $1}')
          LIN_SUM_AMD64=$(sha256sum "$LIN_PATH_AMD64" | awk '{print $1}')
          LIN_SUM_ARM64=$(sha256sum "$LIN_PATH_ARM64" | awk '{print $1}')

          VERSION=${GITHUB_REF##*/}
          VERSION=${VERSION#v}

          cat <<EOF > release.json
          {
            "version": "$VERSION",
            "windows": {
              "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/x-gen.exe",
              "checksum": "$WIN_SUM"
            },
            "linux": {
              "amd64": {
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/x-gen-amd64",
                "checksum": "$LIN_SUM_AMD64"
              },
              "arm64": {
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/x-gen-arm64",
                "checksum": "$LIN_SUM_ARM64"
              }
            }
          }
          EOF

          cat release.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/x-gen-windows/x-gen.exe
            artifacts/x-gen-windows/checksum-windows.txt
            artifacts/x-gen-linux-amd64/x-gen-amd64
            artifacts/x-gen-linux-amd64/checksum-amd64.txt
            artifacts/x-gen-linux-arm64/x-gen-arm64
            artifacts/x-gen-linux-arm64/checksum-arm64.txt
            artifacts/release.json
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push release.json to main
        run: |
          VERSION=${GITHUB_REF##*/}
          VERSION=${VERSION#v}
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git repo
          cd repo
          cp ../artifacts/release.json .
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f release.json
          git commit -m "Update release.json for v$VERSION"
          git push
